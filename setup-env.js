#!/usr/bin/env node

/**
 * Environment Setup Script for ShrinkLink
 * 
 * This script helps set up environment variables for both frontend and backend
 * from the root .env file.
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Define paths
const rootEnvPath = path.join(__dirname, '.env');
const backendEnvPath = path.join(__dirname, 'BACKEND', '.env');
const frontendEnvPath = path.join(__dirname, 'FRONTEND', '.env');

// Backend environment variables (non-VITE prefixed)
const backendVars = [
  'MONGO_URI',
  'JWT_SECRET',
  'PORT',
  'NODE_ENV',
  'APP_URL',
  'FRONTEND_URL',
  'BCRYPT_ROUNDS',
  'RATE_LIMIT_WINDOW_MS',
  'RATE_LIMIT_MAX_REQUESTS',
  'DEFAULT_URL_EXPIRY_DAYS',
  'LOG_LEVEL',
  'HELMET_CSP_ENABLED',
  'CORS_ORIGIN',
  'DB_MAX_POOL_SIZE',
  'DB_MIN_POOL_SIZE',
  'SMTP_HOST',
  'SMTP_PORT',
  'SMTP_USER',
  'SMTP_PASS',
  'GOOGLE_ANALYTICS_ID',
  'REDIS_URL',
  'GOOGLE_CLIENT_ID',
  'GOOGLE_CLIENT_SECRET',
  'GITHUB_CLIENT_ID',
  'GITHUB_CLIENT_SECRET',
  'CLOUDINARY_CLOUD_NAME',
  'CLOUDINARY_API_KEY',
  'CLOUDINARY_API_SECRET',
  'SENTRY_DSN',
  'DEBUG',
  'VERBOSE_LOGGING',
  'TEST_DATABASE_URL',
  'TEST_JWT_SECRET'
];

// Frontend environment variables (VITE_ prefixed)
const frontendVars = [
  'VITE_API_URL',
  'VITE_APP_NAME',
  'VITE_APP_VERSION'
];

function parseEnvFile(filePath) {
  if (!fs.existsSync(filePath)) {
    console.error(`❌ Environment file not found: ${filePath}`);
    return {};
  }

  const content = fs.readFileSync(filePath, 'utf8');
  const env = {};

  content.split('\n').forEach(line => {
    line = line.trim();
    
    // Skip comments and empty lines
    if (line.startsWith('#') || !line) return;
    
    const [key, ...valueParts] = line.split('=');
    if (key && valueParts.length > 0) {
      env[key.trim()] = valueParts.join('=').trim();
    }
  });

  return env;
}

function createEnvFile(filePath, variables, envData, description) {
  const lines = [
    `# ${description}`,
    `# Generated from root .env file on ${new Date().toISOString()}`,
    `# Do not edit this file directly - edit the root .env file instead`,
    '',
  ];

  variables.forEach(varName => {
    if (envData[varName] !== undefined) {
      lines.push(`${varName}=${envData[varName]}`);
    }
  });

  // Ensure directory exists
  const dir = path.dirname(filePath);
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }

  fs.writeFileSync(filePath, lines.join('\n') + '\n');
  console.log(`✅ Created ${filePath}`);
}

function main() {
  console.log('🔧 Setting up environment variables for ShrinkLink...\n');

  // Parse root .env file
  const envData = parseEnvFile(rootEnvPath);
  
  if (Object.keys(envData).length === 0) {
    console.error('❌ No environment variables found in root .env file');
    console.log('💡 Make sure you have a .env file in the root directory');
    console.log('💡 You can copy .env.example to .env and fill in your values');
    process.exit(1);
  }

  console.log(`📖 Found ${Object.keys(envData).length} environment variables in root .env file\n`);

  // Create backend .env file
  console.log('🔨 Creating backend environment file...');
  createEnvFile(
    backendEnvPath,
    backendVars,
    envData,
    'Backend Environment Variables for ShrinkLink'
  );

  // Create frontend .env file
  console.log('🔨 Creating frontend environment file...');
  createEnvFile(
    frontendEnvPath,
    frontendVars,
    envData,
    'Frontend Environment Variables for ShrinkLink'
  );

  console.log('\n✅ Environment setup complete!');
  console.log('\n📋 Summary:');
  console.log(`   • Root .env file: ${Object.keys(envData).length} variables`);
  console.log(`   • Backend .env file: ${backendVars.filter(v => envData[v]).length} variables`);
  console.log(`   • Frontend .env file: ${frontendVars.filter(v => envData[v]).length} variables`);
  
  console.log('\n🚀 Next steps:');
  console.log('   1. Review the generated .env files');
  console.log('   2. Start the backend: cd BACKEND && npm run dev');
  console.log('   3. Start the frontend: cd FRONTEND && npm run dev');
  console.log('   4. Access your app at http://localhost:5174');

  // Check for missing critical variables
  const criticalVars = ['MONGO_URI', 'JWT_SECRET', 'VITE_API_URL'];
  const missingVars = criticalVars.filter(v => !envData[v] || envData[v] === '');
  
  if (missingVars.length > 0) {
    console.log('\n⚠️  Warning: Missing critical environment variables:');
    missingVars.forEach(v => console.log(`   • ${v}`));
    console.log('   Please update your root .env file and run this script again.');
  }
}

// Run the script
if (import.meta.url === `file://${process.argv[1]}`) {
  main();
}

export { parseEnvFile, createEnvFile };
